{
    "sourceFile": "legado/codigo/trata_log_pcibex_v2.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1744570200933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744570227346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,7 +41,4 @@\n except FileNotFoundError:\r\n     with pd.ExcelWriter(excel_file_name, engine='openpyxl') as writer:\r\n         for nome_grupo, grupo_df in grupos:\r\n             grupo_df.to_excel(writer, sheet_name=str(nome_grupo), index=False)\r\n-\r\n-# Baixar o arquivo Excel atualizado\r\n-files.download(excel_file_name)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744570241732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,10 @@\n \r\n # Importando bibliotecas necessárias\r\n import pandas as pd\r\n \r\n-# Carregar o arquivo CSV (faça o upload no Google Colab usando o botão de upload)\r\n-uploaded = files.upload()\r\n \r\n+\r\n # Nome do arquivo CSV (substitua pelo nome do arquivo importado)\r\n file_name = \"results_dev.csv\"  # Coloque o nome correto do arquivo\r\n \r\n # Lendo o arquivo CSV ignorando linhas que começam com '#'\r\n"
                }
            ],
            "date": 1744570200932,
            "name": "Commit-0",
            "content": "# -*- coding: utf-8 -*-\r\n\"\"\"trata_log_pcibex_v2.ipynb\r\n\r\nAutomatically generated by Colab.\r\n\r\nOriginal file is located at\r\n    https://colab.research.google.com/drive/1VtX7geiUE0v9WZwt9X_JpPJ7_Zy6ae1v\r\n\"\"\"\r\n\r\n# Importando bibliotecas necessárias\r\nimport pandas as pd\r\n\r\n# Carregar o arquivo CSV (faça o upload no Google Colab usando o botão de upload)\r\nuploaded = files.upload()\r\n\r\n# Nome do arquivo CSV (substitua pelo nome do arquivo importado)\r\nfile_name = \"results_dev.csv\"  # Coloque o nome correto do arquivo\r\n\r\n# Lendo o arquivo CSV ignorando linhas que começam com '#'\r\ndf = pd.read_csv(file_name, comment='#', header=None)\r\n\r\n# Desativar a notação científica para todas as colunas\r\npd.options.display.float_format = '{:,.6f}'.format\r\n\r\n# Nome do arquivo Excel existente onde os dados serão salvos como uma nova aba\r\nexcel_file_name = \"Res_Pre.xlsx\"\r\n\r\n# Identificando o nome das colunas (a primeira linha do arquivo CSV agora é tratada como um registro)\r\ncolunas = [f\"Coluna_{i+1}\" for i in range(df.shape[1])]\r\ndf.columns = colunas\r\n\r\n# Agrupar o DataFrame pelo identificador da primeira coluna\r\ngrupo_identificador = colunas[0]\r\ngrupos = df.groupby(grupo_identificador)\r\n\r\ntry:\r\n    with pd.ExcelWriter(excel_file_name, engine='openpyxl', mode='a') as writer:\r\n        for nome_grupo, grupo_df in grupos:\r\n            # Escrever cada grupo em uma aba nomeada com o identificador do grupo\r\n            grupo_df.to_excel(writer, sheet_name=str(nome_grupo), index=False)\r\nexcept FileNotFoundError:\r\n    with pd.ExcelWriter(excel_file_name, engine='openpyxl') as writer:\r\n        for nome_grupo, grupo_df in grupos:\r\n            grupo_df.to_excel(writer, sheet_name=str(nome_grupo), index=False)\r\n\r\n# Baixar o arquivo Excel atualizado\r\nfiles.download(excel_file_name)"
        }
    ]
}